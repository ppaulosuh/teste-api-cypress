{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-25T13:21:26.383Z",
    "end": "2022-07-25T13:21:27.749Z",
    "duration": 1366,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c17baa9c-24d7-4aad-9a42-b89c6b0908db",
      "title": "",
      "fullFile": "cypress/integration/produtos.spec.js",
      "file": "cypress/integration/produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
          "title": "Teste da Funcionalidade Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de produtos",
              "fullTitle": "Teste da Funcionalidade Produtos Deve validar contrato de produtos",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "52c73763-8aa1-4169-b8a0-731d0f36e36d",
              "parentUUID": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "listar produtos",
              "fullTitle": "Teste da Funcionalidade Produtos listar produtos",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'Produtos'\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(20);\n});",
              "err": {},
              "uuid": "46c7efe8-9e25-4bad-82b9-8a05e043199b",
              "parentUUID": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto",
              "fullTitle": "Teste da Funcionalidade Produtos Cadastrar Produto",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.request({\n  method: 'POST',\n  url: 'produtos',\n  body: {\n    \"nome\": produto,\n    \"preco\": 200,\n    \"descricao\": \"Produto Novo\",\n    \"quantidade\": 100\n  },\n  headers: {\n    authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "21d33fc5-611f-4b82-a730-b80aa9e5a424",
              "parentUUID": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Teste da Funcionalidade Produtos Deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, \"Produto EBAC Novo 1\", 250, \"Descriçãod do Produto novo\", 180).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "366e873d-01fa-4304-bd71-e026251f0207",
              "parentUUID": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto já cadastrado",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto já cadastrado",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  //cy.log(response.body.produtos[0]._id)\n  let id = response.body.produtos[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": \"Produto EBAC editado 1\",\n      \"preco\": 100,\n      \"descricao\": \"Produto Novo\",\n      \"quantidade\": 100\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal(\"Registro alterado com sucesso\");\n  });\n});",
              "err": {},
              "uuid": "304fa852-c06f-4a78-babd-f35b3a0dd43e",
              "parentUUID": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto cadastrado previamente",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 250, \"Descrição do Produto novo\", 180).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 200,\n      \"descricao\": \"Produto Novo\",\n      \"quantidade\": 200\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal(\"Registro alterado com sucesso\");\n  });\n});",
              "err": {},
              "uuid": "e4de58c8-9f6a-43c0-bac7-e5bf5050d176",
              "parentUUID": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um produto previamente cadastrado",
              "fullTitle": "Teste da Funcionalidade Produtos Deve deletar um produto previamente cadastrado",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 250, \"Descrição do Produto novo\", 180).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "edab28e0-6cb0-4aab-a25f-a5b97536498d",
              "parentUUID": "ec60c855-4cbf-46ad-a8d2-2f9b3675f366",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52c73763-8aa1-4169-b8a0-731d0f36e36d",
            "46c7efe8-9e25-4bad-82b9-8a05e043199b",
            "21d33fc5-611f-4b82-a730-b80aa9e5a424",
            "366e873d-01fa-4304-bd71-e026251f0207",
            "304fa852-c06f-4a78-babd-f35b3a0dd43e",
            "e4de58c8-9f6a-43c0-bac7-e5bf5050d176",
            "edab28e0-6cb0-4aab-a25f-a5b97536498d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1194,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}